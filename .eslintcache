[{"D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\index.js":"1","D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\reportWebVitals.js":"2","D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\App.js":"3","D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\Comps\\Dashboard.js":"4","D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\Comps\\RenderArray.js":"5"},{"size":263,"mtime":1608945375830,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":592,"mtime":1608940608590,"results":"9","hashOfConfig":"7"},{"size":2749,"mtime":1609025330980,"results":"10","hashOfConfig":"7"},{"size":3566,"mtime":1609014631303,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"totuff",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\index.js",[],["25","26"],"D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\reportWebVitals.js",[],"D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\App.js",["27"],"import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Dashboard from '../src/Comps/Dashboard';\n\nfunction App() {\n  let [force, setforce] = useState(0);\n  useEffect(() => {\n    window.addEventListener('resize', forceRender);\n    return () => { window.removeEventListener('resize', forceRender) }\n  }, [])\n\n  const forceRender = () => {\n    setforce(force => force + 1);\n  }\n\n  return (\n    <div className='body'>\n      <Switch>\n        <Route exact path='/' component={Dashboard} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\Comps\\Dashboard.js",[],"D:\\work_profession_developer\\sort_visual\\sort_visual\\src\\Comps\\RenderArray.js",["28","29"],"import React, { useEffect, useState } from 'react';\r\nimport '../CSS/dashboard.css';\r\n\r\n\r\nexport default function RenderArray(props) {\r\n    const [array, setarray] = useState([]);\r\n\r\n    useEffect(() => {\r\n        renderBasic();\r\n    }, [])\r\n\r\n    const renderBasic = () => {\r\n        if (!localStorage.getItem('arraySize')) {\r\n            let size = props.size;\r\n            let arr = [], count = 0, obj = {};\r\n            while (true) {\r\n                let number = Math.floor(Math.random() * 50) + 1;\r\n                count++;\r\n                obj.value = number;\r\n                obj.id = (count - 1);\r\n                let newobj = {};\r\n                newobj = { ...obj };\r\n                arr = [...arr, newobj];\r\n                if (count === size)\r\n                    break;\r\n            }\r\n            localStorage.setItem('array', JSON.stringify(arr));\r\n            localStorage.setItem('arraySize', Number(props.size));\r\n            setarray(arr);\r\n        }\r\n        else if (localStorage.getItem('arraySize') !== props.size) {\r\n            if (localStorage.getItem('arraySize') < props.size) {\r\n                let size = props.size - localStorage.getItem('arraySize');\r\n                let arr = [], count = (props.size - size), obj = {};\r\n                while (true) {\r\n                    let number = Math.floor(Math.random() * 50) + 1;\r\n                    count++;\r\n                    obj.value = number;\r\n                    obj.id = (count - 1);\r\n                    let newobj = {};\r\n                    newobj = { ...obj };\r\n                    arr = [...arr, newobj];\r\n                    if (count === props.size)\r\n                        break;\r\n                }\r\n                let res = [];\r\n                res = JSON.parse(localStorage.getItem('array'));\r\n                res = res.map(item => (item))\r\n                res = [...res, ...arr];\r\n                localStorage.setItem('array', JSON.stringify(res));\r\n                localStorage.setItem('arraySize', Number(props.size));\r\n                setarray(res);\r\n            }\r\n            if (localStorage.getItem('arraySize') > props.size) {\r\n                let deduction = localStorage.getItem('arraySize') - props.size;\r\n                let res = [];\r\n                res = JSON.parse(localStorage.getItem('array'));\r\n                res = res.map(item => (item));\r\n                let arr = [], count = 0;\r\n                for (let i = 0; i < res.length; i++) {\r\n                    arr = [...arr, res[i]];\r\n                    count++;\r\n                    if (count === (res.length - deduction))\r\n                        break;\r\n                }\r\n                localStorage.setItem('array', JSON.stringify(arr));\r\n                localStorage.setItem('arraySize', Number(props.size));\r\n                setarray(arr);\r\n            }\r\n        }\r\n        else if (localStorage.getItem('arraySize') === props.size) {\r\n            let res = [];\r\n            res = JSON.parse(localStorage.getItem('array'));\r\n            res = res.map(item => (item))\r\n            localStorage.setItem('array', JSON.stringify(res));\r\n            localStorage.setItem('arraySize', Number(props.size));\r\n            setarray(res);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <br />\r\n            <div className='flexRow baseline'>\r\n                {array && array.map(item =>\r\n                    <p id={item.id} style={{ height: (item.value * 10) + 'px' }} id='paper' >{item.value}</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":6,"column":8,"nodeType":"36","messageId":"37","endLine":6,"endColumn":13},{"ruleId":"38","severity":1,"message":"39","line":10,"column":8,"nodeType":"40","endLine":10,"endColumn":10,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":87,"column":82,"nodeType":"44","endLine":87,"endColumn":92},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'force' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderBasic'. Either include it or remove the dependency array.","ArrayExpression",["47"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [renderBasic]",{"range":"50","text":"51"},[236,238],"[renderBasic]"]